# vim: set ft=helm:
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-kube-prometheus-stack
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 70.3.0  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/Chart.yaml
    helm:
      valuesObject:
        # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
        # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
        grafana:
          replicas: 1
          ingress:
            enabled: false
          persistence:
            enabled: false  # Grafana used as readonly
          grafana.ini:
            # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/
            users:
              viewers_can_edit: true  # https://grafana.com/docs/grafana/latest/administration/user-management/manage-dashboard-permissions/#enable-viewers-to-edit-but-not-save-dashboards-and-use-explore
              default_theme: system
          additionalDataSources:
            - access: proxy
              isDefault: false
              name: Loki
              orgId: 1
              type: loki
              url: http://monitoring-loki-gateway
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: "default"
                orgId: 1
                folder: ""
                type: file
                disableDeletion: false
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              # Inside cluster metrics
              13646-kubernetes-persistent-volumes:
                gnetId: 13646
                revision: 2
                datasource: Prometheus

        prometheus:
          prometheusSpec:
            # TODO: Increase/decrease as needed
            # https://prometheus.io/docs/prometheus/latest/storage/#right-sizing-retention-size
            retention: 90d  # How long to retain metrics
            retentionSize: "18GB"  # Maximum size of metrics
            storageSpec:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 20Gi

        # TODO: Enable and configure this
        alertmanager:
            enabled: false
